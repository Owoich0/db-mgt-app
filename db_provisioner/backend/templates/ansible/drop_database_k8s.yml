- name: Drop PostgreSQL database on Kubernetes
  hosts: postgresql
  become: true
  gather_facts: false
  vars:
    kubeconfig_src: /etc/rancher/k3s/k3s.yaml
    kubeconfig_dest: /home/rocky/.kube/config
    postgres_label_selector: "app=postgres"
    postgres_user: postgres
    db_name: "{{ db_name }}"

  tasks:
    - name: Ensure ~/.kube directory exists
      file:
        path: /home/rocky/.kube
        state: directory
        owner: rocky
        group: rocky
        mode: '0755'

    - name: Copy kubeconfig to home directory if it doesn't exist
      copy:
        src: "{{ kubeconfig_src }}"
        dest: "{{ kubeconfig_dest }}"
        remote_src: yes
        owner: rocky
        group: rocky
        mode: '0644'
      when: not lookup('file', kubeconfig_dest, errors='ignore')

    - name: Get PostgreSQL pod name
      shell: >
        /usr/local/bin/k3s kubectl get pods -l {{ postgres_label_selector }}
        -o jsonpath='{.items[0].metadata.name}'
      register: postgres_pod_name
      changed_when: false

    - name: Drop database inside the pod
      shell: >
        /usr/local/bin/k3s kubectl --kubeconfig {{ kubeconfig_dest }}
        exec {{ postgres_pod_name.stdout }} -- bash -c
        "psql -U {{ postgres_user }} -c \"DROP DATABASE IF EXISTS \\\"{{ db_name }}\\\";\""
      when: db_name != ""
      register: drop_result
      changed_when: "'DROP DATABASE' in drop_result.stdout"

    - name: Show result
      debug:
        var: drop_result.stdout
